---
// @see: https://ellodave.dev/blog/article/using-svgs-as-astro-components-and-inline-css/
import { parse } from "node-html-parser"

export interface Props {
  name: string
  class?: string
}

function getSVG(name: string) {
  const filepath = `/src/svg/${name}.svg`
  const files = import.meta.glob<string>("/src/svg/**/*.svg", {
    as: "raw",
    eager: true,
  })

  if (!(filepath in files)) {
    throw new Error(`${filepath} not found`)
  }

  const root = parse(files[filepath])

  const svg = root.querySelector("svg")
  if (!svg) throw new Error("Cannot find SVG element")
  const { attributes, innerHTML } = svg

  return {
    attributes,
    innerHTML,
  }
}

const { name, ...attributes } = Astro.props as Props
const { attributes: baseAttributes, innerHTML } = getSVG(name)

const svgAttributes = { ...baseAttributes, ...attributes }
---

<svg {...svgAttributes} set:html={innerHTML} />
